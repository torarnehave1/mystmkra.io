import OpenAI from "openai";
const openai = new OpenAI();
/**
 * Generate a response from OpenAI based on input text.
 * @param {string} text - The user's input text to analyze.
 * @returns {string} - The response generated by OpenAI.
 */
export default async function generateOpenAIResponse(text) {
    try {
        const response = await openai.chat.completions.create({
            model: "gpt-4",
            messages: [
                { role: "system", content: "You are a professional assistant. Respond in markdown with appropriate titles." },
                { role: "user", content: text },
            ],
        });
        // Return the generated content from OpenAI
        return response.choices[0].message.content;
    } catch (error) {
        console.error('Error generating OpenAI response:', error.message || error.response?.data);
        throw new Error("Failed to generate OpenAI response.");
    }
}

/**
 * Get help from OpenAI based on the current step's prompt and description along with user details.
 * @param {string} prompt - The current step's prompt.
 * @param {string} description - The current step's description.
 * @param {string} userDetails - Additional details provided by the user.
 * @returns {string} - The response generated by OpenAI.
 */
export async function getHelpFromOpenAI(prompt, description, userDetails) {
    try {
        const response = await openai.chat.completions.create({
            model: "gpt-4",
            messages: [
                { role: "system", content: "You are a professional assistant. Respond in markdown with appropriate titles." },
                { role: "user", content: `Prompt: ${prompt}\nDescription: ${description}\nUser Details: ${userDetails}` },
            ],
        });
        // Return the generated content from OpenAI
        return response.choices[0].message.content;
    } catch (error) {
        console.error('Error getting help from OpenAI:', error.message || error.response?.data);
        throw new Error("Failed to get help from OpenAI.");
    }
}